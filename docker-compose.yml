services:
  # Aplicação HyperF
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hyperf-pix-example-app
    restart: unless-stopped
    ports:
      - "${APP_PORT}:9501"
    volumes:
      - .:/opt/www
      - ./storage:/opt/www/storage
    environment:
      - APP_NAME=${APP_NAME}
      - APP_ENV=${APP_ENV}
      - APP_KEY=${APP_KEY}
      - APP_TIMEZONE=${APP_TIMEZONE}
      - DB_DRIVER=${DB_DRIVER}
      - DB_HOST=mysql
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_CHARSET=${DB_CHARSET}
      - DB_COLLATION=${DB_COLLATION}
      - DB_PREFIX=${DB_PREFIX}
      - REDIS_HOST=redis
      - REDIS_AUTH=${REDIS_AUTH}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - MAIL_MAILER=${MAIL_MAILER}
      - MAIL_HOST=mailhog
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - PIX_SCHEDULE_MAX_DAYS=${PIX_SCHEDULE_MAX_DAYS}
      - PIX_ALLOWED_TYPES=${PIX_ALLOWED_TYPES}
    depends_on:
      - mysql
      - redis
      - mailhog
    networks:
      - hyperf-pix-example-network

  # Nginx (Load Balancer)
  nginx:
    image: nginx:alpine
    container_name: hyperf-pix-example-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    networks:
      - hyperf-pix-example-network

  # MySQL 8
  mysql:
    image: mysql:8.0
    container_name: hyperf-pix-example-mysql
    restart: unless-stopped
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      TZ: ${APP_TIMEZONE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hyperf-pix-example-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: hyperf-pix-example-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - hyperf-pix-example-network

  # Mailhog (Email Testing)
  mailhog:
    image: mailhog/mailhog
    container_name: hyperf-pix-example-mailhog
    restart: unless-stopped
    ports:
      - "${MAILHOG_SMTP_PORT}:1025"  # SMTP
      - "${MAILHOG_WEB_PORT}:8025"  # Web UI
    networks:
      - hyperf-pix-example-network

  # Cron Job Service
  cron:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hyperf-pix-example-cron
    restart: unless-stopped
    volumes:
      - .:/opt/www
      - ./storage:/opt/www/storage
    environment:
      - APP_NAME=${APP_NAME}
      - APP_ENV=${APP_ENV}
      - APP_KEY=${APP_KEY}
      - APP_TIMEZONE=${APP_TIMEZONE}
      - DB_DRIVER=${DB_DRIVER}
      - DB_HOST=mysql
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_CHARSET=${DB_CHARSET}
      - DB_COLLATION=${DB_COLLATION}
      - DB_PREFIX=${DB_PREFIX}
      - REDIS_HOST=redis
      - REDIS_AUTH=${REDIS_AUTH}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - PIX_SCHEDULE_MAX_DAYS=${PIX_SCHEDULE_MAX_DAYS}
      - PIX_ALLOWED_TYPES=${PIX_ALLOWED_TYPES}
    depends_on:
      - mysql
      - redis
    command: ["php", "bin/hyperf.php", "crontab:run"]
    networks:
      - hyperf-pix-example-network

volumes:
  mysql_data:
  redis_data:

networks:
  hyperf-pix-example-network:
    driver: bridge
